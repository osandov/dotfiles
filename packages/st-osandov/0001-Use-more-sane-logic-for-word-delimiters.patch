From 5081ce521297e1e0648df3bcbe79a27d81f76406 Mon Sep 17 00:00:00 2001
From: Omar Sandoval <osandov@fb.com>
Date: Fri, 8 Apr 2016 14:52:01 -0700
Subject: [PATCH] Use more sane logic for word delimiters

"Everything except for space" breaks down with Unicode. This is a
particular annoyance with the border characters in tmux. Instead, go for
explicitly whitelisting alphanumeric characters and characters valid in
URLs.
---
 config.def.h | 38 ++++++++++++++++++++++++++++++++++----
 st.c         | 24 +++---------------------
 2 files changed, 37 insertions(+), 25 deletions(-)

diff --git a/config.def.h b/config.def.h
index 877afab..de2826d 100644
--- a/config.def.h
+++ b/config.def.h
@@ -28,11 +28,41 @@ float cwscale = 1.0;
 float chscale = 1.0;
 
 /*
- * word delimiter string
- *
- * More advanced example: " `'\"()[]{}"
+ * word delimiters
  */
-static char worddelimiters[] = " ";
+static inline int isdelim(wchar_t c)
+{
+	if (iswalnum(c))
+		return 0;
+	switch (c) {
+	case '!':
+	case '#':
+	case '$':
+	case '%':
+	case '&':
+	case '\'':
+	case '(':
+	case ')':
+	case '*':
+	case '+':
+	case ',':
+	case '-':
+	case '.':
+	case '/':
+	case ':':
+	case ';':
+	case '=':
+	case '?':
+	case '@':
+	case '[':
+	case ']':
+	case '_':
+	case '~':
+		return 0;
+	default:
+		return !iswalnum(c);
+	}
+}
 
 /* selection timeouts (in milliseconds) */
 unsigned int doubleclicktimeout = 300;
diff --git a/st.c b/st.c
index d7bd32a..d1adc47 100644
--- a/st.c
+++ b/st.c
@@ -23,6 +23,7 @@
 #include <libgen.h>
 #include <fontconfig/fontconfig.h>
 #include <wchar.h>
+#include <wctype.h>
 
 /* X11 */
 #include <X11/cursorfont.h>
@@ -57,7 +58,6 @@ char *argv0;
 #define ISCONTROLC0(c)		(BETWEEN(c, 0, 0x1f) || (c) == '\177')
 #define ISCONTROLC1(c)		(BETWEEN(c, 0x80, 0x9f))
 #define ISCONTROL(c)		(ISCONTROLC0(c) || ISCONTROLC1(c))
-#define ISDELIM(u)		(utf8strchr(worddelimiters, u) != NULL)
 
 /* constants */
 #define ISO14755CMD		"dmenu -w %lu -p codepoint: </dev/null"
@@ -195,7 +195,6 @@ static void selsnap(int *, int *, int);
 
 static Rune utf8decodebyte(char, size_t *);
 static char utf8encodebyte(Rune, size_t);
-static char *utf8strchr(char *s, Rune u);
 static size_t utf8validate(Rune *, size_t);
 
 static char *base64dec(const char *);
@@ -343,23 +342,6 @@ utf8encodebyte(Rune u, size_t i)
 	return utfbyte[i] | (u & ~utfmask[i]);
 }
 
-char *
-utf8strchr(char *s, Rune u)
-{
-	Rune r;
-	size_t i, j, len;
-
-	len = strlen(s);
-	for (i = 0, j = 0; i < len; i += j) {
-		if (!(j = utf8decode(&s[i], &r, len - i)))
-			break;
-		if (r == u)
-			return &(s[i]);
-	}
-
-	return NULL;
-}
-
 size_t
 utf8validate(Rune *u, size_t i)
 {
@@ -514,7 +496,7 @@ selsnap(int *x, int *y, int direction)
 		 * beginning of a line.
 		 */
 		prevgp = &term.line[*y][*x];
-		prevdelim = ISDELIM(prevgp->u);
+		prevdelim = isdelim(prevgp->u);
 		for (;;) {
 			newx = *x + direction;
 			newy = *y;
@@ -536,7 +518,7 @@ selsnap(int *x, int *y, int direction)
 				break;
 
 			gp = &term.line[newy][newx];
-			delim = ISDELIM(gp->u);
+			delim = isdelim(gp->u);
 			if (!(gp->mode & ATTR_WDUMMY) && (delim != prevdelim
 					|| (delim && gp->u != prevgp->u)))
 				break;
-- 
2.12.1

