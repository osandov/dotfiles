From 004d17f7ede8912e4514263dbe5f8a920194d8d9 Mon Sep 17 00:00:00 2001
From: Omar Sandoval <osandov@osandov.com>
Date: Sun, 10 Jan 2016 01:52:27 -0800
Subject: [PATCH 3/4] Add support for XBM icons in the status bar

This is done with an OSC escape code: "\e]9;icon path\a".
---
 drw.c | 50 +++++++++++++++++++++++++++++++++++++++++++++++++-
 drw.h |  2 +-
 dwm.c | 17 +++++++++--------
 3 files changed, 59 insertions(+), 10 deletions(-)

diff --git a/drw.c b/drw.c
index f49200b2278c..ed47f0aa53fe 100644
--- a/drw.c
+++ b/drw.c
@@ -219,7 +219,7 @@ drw_rect(Drw *drw, int x, int y, unsigned int w, unsigned int h, int filled, int
 }
 
 int
-drw_text(Drw *drw, int x, int y, unsigned int w, unsigned int h, const char *text, int invert)
+drw_text(Drw *drw, int x, int y, unsigned int w, unsigned int h, const char *text, int invert, int escapes)
 {
 	char buf[1024];
 	int tx, ty, th;
@@ -245,17 +245,22 @@ drw_text(Drw *drw, int x, int y, unsigned int w, unsigned int h, const char *tex
 		XSetForeground(drw->dpy, drw->gc, invert ?
 		               drw->scheme->fg->pix : drw->scheme->bg->pix);
 		XFillRectangle(drw->dpy, drw->drawable, drw->gc, x, y, w, h);
+		XSetForeground(drw->dpy, drw->gc, invert ? drw->scheme->bg->pix : drw->scheme->fg->pix);
+		XSetBackground(drw->dpy, drw->gc, invert ? drw->scheme->fg->pix : drw->scheme->bg->pix);
 		d = XftDrawCreate(drw->dpy, drw->drawable,
 		                  DefaultVisual(drw->dpy, drw->screen),
 		                  DefaultColormap(drw->dpy, drw->screen));
 	}
 
 	curfont = drw->fonts[0];
+
 	while (1) {
 		utf8strlen = 0;
 		utf8str = text;
 		nextfont = NULL;
 		while (*text) {
+			if (escapes && *text == '\x1b')
+				break;
 			utf8charlen = utf8decode(text, &utf8codepoint, UTF_SIZ);
 			for (i = 0; i < drw->fontcount; i++) {
 				charexists = charexists || XftCharExists(drw->dpy, drw->fonts[i]->xfont, utf8codepoint);
@@ -301,6 +306,49 @@ drw_text(Drw *drw, int x, int y, unsigned int w, unsigned int h, const char *tex
 
 		if (!*text) {
 			break;
+		} else if (escapes && *text == '\x1b') {
+			char *c, *pt;
+			long ps;
+			Pixmap bm;
+			unsigned int bm_w, bm_h;
+			int bm_xh, bm_yh;
+			text++;
+			if (*text == ']') {
+				/* Operating System Control (OSC) */
+				text++;
+				ps = strtol(text, &c, 10);
+				if (*c != ';')
+					break;
+				if (ps == 9) {
+					/* Icon */
+					text = c + 1;
+					c = strchr(text, '\a');
+					if (!c)
+						break;
+					pt = malloc(c - text + 1);
+					if (pt) {
+						memcpy(pt, text, c - text);
+						pt[c - text] = '\0';
+						if (XReadBitmapFile(drw->dpy, drw->drawable, pt, &bm_w, &bm_h, &bm, &bm_xh, &bm_yh) == BitmapSuccess) {
+							if (render) {
+								th = curfont->ascent + curfont->descent;
+								ty = y + (h / 2) - (th / 2) + curfont->ascent;
+								tx = x + (h / 2);
+								XCopyPlane(drw->dpy, bm, drw->drawable, drw->gc, 0, 0, bm_w, bm_h, tx, ty - bm_h, 1);
+							}
+							XFreePixmap(drw->dpy, bm);
+							x += bm_w + 1;
+							w -= bm_w + 1;
+						}
+						free(pt);
+					}
+					text = c + 1;
+				} else {
+					break;
+				}
+			} else {
+				break;
+			}
 		} else if (nextfont) {
 			charexists = 0;
 			curfont = nextfont;
diff --git a/drw.h b/drw.h
index e3b8515235f6..bab169a099a3 100644
--- a/drw.h
+++ b/drw.h
@@ -68,7 +68,7 @@ void drw_setscheme(Drw *, ClrScheme *);
 
 /* Drawing functions */
 void drw_rect(Drw *, int, int, unsigned int, unsigned int, int, int, int);
-int drw_text(Drw *, int, int, unsigned int, unsigned int, const char *, int);
+int drw_text(Drw *, int, int, unsigned int, unsigned int, const char *, int, int);
 
 /* Map functions */
 void drw_map(Drw *, Window, int, int, unsigned int, unsigned int);
diff --git a/dwm.c b/dwm.c
index 9380032df909..de930fb5ce90 100644
--- a/dwm.c
+++ b/dwm.c
@@ -57,7 +57,8 @@
 #define WIDTH(X)                ((X)->w + 2 * (X)->bw)
 #define HEIGHT(X)               ((X)->h + 2 * (X)->bw)
 #define TAGMASK                 ((1 << LENGTH(tags)) - 1)
-#define TEXTW(X)                (drw_text(drw, 0, 0, 0, 0, (X), 0) + drw->fonts[0]->h)
+#define TEXTW(X)                (drw_text(drw, 0, 0, 0, 0, (X), 0, 0) + drw->fonts[0]->h)
+#define ETEXTW(X)               (drw_text(drw, 0, 0, 0, 0, (X), 0, 1) + drw->fonts[0]->h)
 
 /* enums */
 enum { CurNormal, CurResize, CurMove, CurLast }; /* cursor */
@@ -239,7 +240,7 @@ static void zoom(const Arg *arg);
 
 /* variables */
 static const char broken[] = "broken";
-static char stext[256];
+static char stext[4096];
 static int screen;
 static int sw, sh;           /* X display screen geometry width, height */
 static int bh, blw = 0;      /* bar geometry */
@@ -444,7 +445,7 @@ buttonpress(XEvent *e)
 			arg.ui = 1 << i;
 		} else if (ev->x < x + blw)
 			click = ClkLtSymbol;
-		else if (ev->x > selmon->ww - TEXTW(stext))
+		else if (ev->x > selmon->ww - ETEXTW(stext))
 			click = ClkStatusText;
 		else
 			click = ClkWinTitle;
@@ -735,31 +736,31 @@ drawbar(Monitor *m)
 	for (i = 0; i < LENGTH(tags); i++) {
 		w = TEXTW(tags[i]);
 		drw_setscheme(drw, m->tagset[m->seltags] & 1 << i ? &scheme[SchemeSel] : &scheme[SchemeNorm]);
-		drw_text(drw, x, 0, w, bh, tags[i], urg & 1 << i);
+		drw_text(drw, x, 0, w, bh, tags[i], urg & 1 << i, 0);
 		drw_rect(drw, x + 1, 1, dx, dx, m == selmon && selmon->sel && selmon->sel->tags & 1 << i,
 		           occ & 1 << i, urg & 1 << i);
 		x += w;
 	}
 	w = blw = TEXTW(m->ltsymbol);
 	drw_setscheme(drw, &scheme[SchemeNorm]);
-	drw_text(drw, x, 0, w, bh, m->ltsymbol, 0);
+	drw_text(drw, x, 0, w, bh, m->ltsymbol, 0, 0);
 	x += w;
 	xx = x;
 	if (m == selmon) { /* status is only drawn on selected monitor */
-		w = TEXTW(stext);
+		w = ETEXTW(stext);
 		x = m->ww - w;
 		if (x < xx) {
 			x = xx;
 			w = m->ww - xx;
 		}
-		drw_text(drw, x, 0, w, bh, stext, 0);
+		drw_text(drw, x, 0, w, bh, stext, 0, 1);
 	} else
 		x = m->ww;
 	if ((w = x - xx) > bh) {
 		x = xx;
 		if (m->sel) {
 			drw_setscheme(drw, m == selmon ? &scheme[SchemeSel] : &scheme[SchemeNorm]);
-			drw_text(drw, x, 0, w, bh, m->sel->name, 0);
+			drw_text(drw, x, 0, w, bh, m->sel->name, 0, 0);
 			drw_rect(drw, x + 1, 1, dx, dx, m->sel->isfixed, m->sel->isfloating, 0);
 		} else {
 			drw_setscheme(drw, &scheme[SchemeNorm]);
-- 
2.9.0

